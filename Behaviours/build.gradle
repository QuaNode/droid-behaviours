plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'signing'
}

android {
    compileSdkVersion 31
    buildToolsVersion '30.0.2'
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 31
        versionCode 5
        versionName "1.4"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

dependencies {
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation ('io.socket:socket.io-client:2.0.1') {
        // excluding org.json which is provided by Android
        exclude group: 'org.json', module: 'json'
    }
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def GITHUB_ACTOR = properties.getProperty('GITHUB_ACTOR')
def GITHUB_TOKEN = properties.getProperty('GITHUB_TOKEN')
def MAVEN_USERNAME = properties.getProperty('MAVEN_USERNAME')
def MAVEN_PASSWORD = properties.getProperty('MAVEN_PASSWORD')

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.source
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    excludes = ['**/*.kt']
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    archiveClassifier = 'javadoc'
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

if (JavaVersion.current().isJava9Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addBooleanOption('html5', true)
        }
    }
}

artifacts {
    archives javadocJar, sourcesJar
}

android.libraryVariants.all { variant ->
    tasks.javadoc.doFirst {
        classpath += files(variant.javaCompileProvider.get().classpath.files.join(File.pathSeparator))
    }
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = 'com.quanode'
            artifactId = "behaviours"
            version =  android.defaultConfig.versionName
            artifact "$buildDir/outputs/aar/Behaviours-release.aar"
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'Behaviours'
                packaging 'aar'
                description = 'Android client for Behaviours'
                url = 'https://github.com/QuaNode/droid-behaviours'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://mit-license.org'
                    }
                }
                developers {
                    developer {
                        id = 'quanode'
                        name = 'QuaNode'
                        email = 'info@quanode.com'
                    }
                }
                scm {
                    connection = 'git+https://github.com/QuaNode/droid-behaviours.git'
                    developerConnection = 'git+https://github.com/QuaNode/droid-behaviours.git'
                    url = 'https://github.com/QuaNode/droid-behaviours'
                }
//                signing {
//                    sign publishing.publications.release
//                    sign configurations.archives
//                }
            }
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/quanode/droid-behaviours"
            credentials {
                username = GITHUB_ACTOR
                password = GITHUB_TOKEN
            }
        }
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = MAVEN_USERNAME
                password = MAVEN_PASSWORD
            }
        }
    }
}